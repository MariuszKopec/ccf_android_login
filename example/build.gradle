apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'APK META-INF/notice.txt'
    }
}

dependencies {
    def androidDependencies = rootProject.ext.androidDependencies

    apt androidDependencies.annotations_apt

    compile project(':login_view')
    compile project(':login_repository')

    compile androidDependencies.ui_cards

    apt androidDependencies.dagger_apt
    provided rootProject.ext.androidDependencies.javaxAnnotation

    compile('com.mikepenz:materialdrawer:3.0.6@aar') {
        transitive = true
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        applicationId android.defaultConfig.applicationId
    }
}
